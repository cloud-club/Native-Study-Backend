name: development build and deploy

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  clean:
    name: clean docker volume and network
    runs-on: self-hosted
    steps:
      - name: remove running container
        run: |
          docker rm -f music_service
          docker rm -f file_server
          docker rm -f mongo
      - name: remove docker volume
        run: |
          docker volume rm -f file_server
          docker volume rm -f mongo
      - name: remove docker network
        run: |
          docker network prune -f
  build:
    name: build
    runs-on: self-hosted
    needs: clean
    steps:
      - uses: actions/checkout@v3
      - name: create docker network
        env:
          BUILD_VERSION: ${{ github.run_number }}
        run: docker network create backend --driver bridge --gateway 10.123.$BUILD_VERSION.1 --subnet 10.123.$BUILD_VERSION.0/24
      - name: create docker volume
        run: |
          docker volume create file_server --driver local
          docker volume create mongo --driver local
      - name: Build music_service image
        env:
          UBUNTU_VERSION: ${{ secrets.UBUNTU_VERSION }}
        run: docker build --build-arg UBUNTU_VERSION=$UBUNTU_VERSION -t music_service:dev .
      - name: generate file_server container
        env:
          MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
        run: |
          docker run -d -v file_server:/DATA \
          -p 9000:9000 -p 9001:9001 \
          -e MINIO_ROOT_USER=$MINIO_ROOT_USER \
          -e MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD \
          --network backend \
          --name file_server \
          quay.io/minio/minio:RELEASE.2022-04-09T15-09-52Z \
          server /DATA --console-address ":9001"
      - name: generate mongoDB container
        env:
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
        run: |
          docker run -d --name mongo -v mongo:/data/db \
          -p 27017:27017 \
          --network backend \
          -e MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME \
          -e MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD \
          mongo:5
      - name: generate music_service container
        env:
          MINIO_ROOT_USER: ${{ secrets.MINIO_ROOT_USER }}
          MINIO_ROOT_PASSWORD: ${{ secrets.MINIO_ROOT_PASSWORD }}
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
        run: |
          docker run -d --name music_service -v $(pwd):/workspace \
          --network backend \
          -e MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME \
          -e MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD \
          -e MINIO_ROOT_USER=$MINIO_ROOT_USER \
          -e MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD \
          -p 80:8090 \
          music_service:dev
      # @TODO: docker image push into private registry
      - name: harbor login
        env:
          HARBOR_HOST_NAME: ${{ secrets.HARBOR_HOST_NAME }}
          HORBOR_USER: ${{ secrets.HORBOR_USER }}
          HARBOR_USER_PASSWORD: ${{ secrets.HARBOR_USER_PASSWORD }}
        run: |
          echo $HARBOR_USER_PASSWORD |  docker login $HARBOR_HOST_NAME -u $HORBOR_USER --password-stdin
